from math import floor
from html import escape
from random import choice
from asyncio import sleep
from .. import loader, utils
from datetime import timedelta
from urllib.parse import quote_plus
from telethon.tl.types import Message
from telethon import events, functions, types, sync
from telethon.tl.functions.users import GetFullUserRequest
from telethon.errors.rpcerrorlist import UsernameOccupiedError
from telethon.tl.functions.account import UpdateProfileRequest, UpdateUsernameRequest
import asyncio, datetime, inspect, io, json, logging, os, threading, time, random, re, requests, urllib.parse

#requires: urllib requests

logger = logging.getLogger(__name__)
types_of = ['femdom', 'tickle', 'classic', 'ngif', 'erofeet', 'meow', 'erok', 'poke', 'les', 'hololewd', 'lewdk', 'keta', 'feetg', 'nsfw_neko_gif', 'eroyuri', 'kiss', '_8ball', 'kuni', 'tits', 'pussy_jpg', 'cum_jpg', 'pussy', 'lewdkemo', 'lizard', 'slap', 'lewd', 'cum', 'cuddle', 'spank', 'smallboobs', 'goose',
'Random_hentai_gif', 'avatar', 'fox_girl', 'nsfw_avatar', 'hug', 'gecg', 'boobs', 'pat', 'feet', 'smug', 'kemonomimi', 'solog', 'holo', 'wallpaper', 'bj', 'woof', 'yuri', 'trap', 'anal', 'baka', 'blowjob', 'holoero', 'feed', 'neko', 'gasm', 'hentai', 'futanari', 'ero', 'solo', 'waifu', 'pwankg', 'eron', 'erokemo']

def chunks(lst, n):
    return [lst[i:i + n] for i in range(0, len(lst), n)]

def register(cb):
    cb(KramikkMod())

@loader.tds
class KramikkMod(loader.Module):
    """–ê–ª–∏–Ω–∞, —è –ª—é–±–ª—é —Ç–µ–±—è!"""
    answers = { 0:("–ù–µ–≤–Ω—è—Ç–µ–Ω –≤–æ–ø—Ä–æ—Å, —Ö–∑, —á—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å",),
        1:("–û—Ç–≤–µ—Ç —Ç–µ–±–µ –∏–∑–≤–µ—Å—Ç–µ–Ω", "–¢—ã –∑–Ω–∞–µ—à—å –ª—É—á—à–µ –º–µ–Ω—è!", "–û—Ç–≤–µ—Ç —É–±–∏–ª!.."),
        2:("–î–∞", "–£—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç", "–ê–≥–∞"),
        3:("–î–∞, –Ω–æ –µ—Å—Ç—å –ø–æ–º–µ—Ö–∏", "–ú–æ–∂–µ—Ç –±—ã—Ç—å", "–í–µ—Ä–æ—è—Ç–Ω–æ", "–í–æ–∑–º–æ–∂–Ω–æ", "–ù–∞–≤–µ—Ä–Ω—è–∫–∞"),
        4:("–ó–Ω–∞—é –æ—Ç–≤–µ—Ç, –Ω–æ –Ω–µ —Å–∫–∞–∂—É", "–î—É–º–∞–π!", "–£–≥–∞–¥–∞–π-–∫–∞...", "–≠—Ç–æ –∑–∞–≥–∞–¥–∫–∞ –æ—Ç –ñ–∞–∫–∞ –§—Ä–µ—Å–∫–æ..."),
        5:("–ù–µ—Ç", "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç"),
        6:("–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ", "–ö–æ–Ω–µ—á–Ω–æ", "–°—Ç–æ –ø—É–¥–æ–≤", "–ê–±—Å–æ–ª—é—Ç–Ω–æ", "–†–∞–∑—É–º–µ–µ—Ç—Å—è", "100%"),
        7:("–ï—Å—Ç—å –ø–æ–º–µ—Ö–∏...", "–í—Ä—è–¥ –ª–∏", "–ß—Ç–æ-—Ç–æ –ø–æ–º–µ—à–∞–µ—Ç", "–ú–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ"),
        8:("–î–∞, –Ω–æ –Ω–µ—Å–∫–æ—Ä–æ", "–î–∞, –Ω–æ –Ω–µ —Å–µ–π—á–∞—Å!"),
        9:("–ù–µ—Ç, –Ω–æ –ø–æ–∫–∞", "–°–∫–æ—Ä–æ!", "–ñ–¥–∏!", "–ü–æ–∫–∞ –Ω–µ—Ç")}
    strings = {
        'name': 'Kramikk',
        'loading': '<b>Loading...</b>',
        'update': '<b>–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–ª–∞–Ω–æ–≤</b>',
        "name_not_found": "<u>–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è, –∏—Å–ø—Ä–∞–≤—å —ç—Ç–æ:</u>\n <code>.kblname %name%</code>",
        "name_set": "<u>–ò–º—è —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ</u>",
        "quest_not_found": "<u>–ê–≥–¥–µ –≤–æ–ø—Ä–æ—Å?</u>",
        "quest_answer": "\n\n<u>%answer%</u>",
        "mention": "<a href='tg://user?id=%id%'>%name%</a>",
    }

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        ans = (await utils.run_sync(requests.get, 'https://nekos.life/api/v2/endpoints')).json()
        clans = {
            '–ë–∞–≥oboty' : -1001380664241,
            '–¢–æ–º –†—ç–¥–¥–ª' : -1001441941681,
            '–ú–∞–Ω—É–ª—ã –∏ –ó–∞–π—á–∞—Ç–∫–∏' : -1001289617428,
            '–ñ–∞–±–æ—Ç–æ—Ä—Ç' : -1001436786642,
            '–°–≤–æ—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞' : -1001485617300,
            '–ë–∞—Ä' : -1001465870466,
            '.' : -1001409792751,
            '–∂–∞–±–∫–∏ –Ω—ç–ª—Å(–ø–ª–∞—Ç–æ–Ω)' : -1001165420047,
            '–°—Ç–∞–Ω—Ü–∏—è' : -1001447960786,
            '–î–∏—Ä–∏–∂–∞–±–ª—å' : -1001264330106,
            '–°–∫–∞–∑–æ—á–Ω—ã–π –¥–æ–Ω–∞—Ç–µ—Ä' : -1001648008859,
            '–õ–∏—Å—Ç–∏–∫' : -1001685708710,
            '–ñ–∞–±—ã –∞—Ñ–µ—Ä–∏—Å—Ç—ã –ö—Ä–∞–º –∏ –±–∞–±—É—à–∫–∞' : -421815520,
            '–•—ç–ª–ª–æ –í–∏–Ω!' : -1001426018704,
            '–¢–∞–Ω—Ü—ã –ø–æ —Å—Ä–µ–¥–∞–º' : -1001481051409,
            'IELTS' : -1001492669520,
            '–î–æ–º–∏–∫ –≤ –±–æ–ª–æ—Ç–µ' : -1001520533176,
            '–ö–æ—Å–º–æ—Å –Ω–∞—Å –∂–¥–µ—Ç' : -1001460270560,
            'Forbidden Frog' : -1001511984124,
            'Vitoad' : -1001771130958,
            '–ö—É—Ä—Å—ã –≤—ã—à–∏–≤–∞–Ω–∏—è' : -1001760342148,
            '–ó–æ–ª–æ—Ç–∞—è –∂–∞–±–∞' : -1001787904496,
            'LSDtoads' : -1001493923839,
            '–¶—ã–≥–∞–Ω–∫–∞' : -1001714871513,
            '–∂–∞–±—ã –ª–µ–Ω–∞' : -1001419547228,
            '–ñ–∞–±–æ—á–∫–∞' : -1001666737591,
            'AstroFrog' : -1001575042525,
            '–ö–æ–Ω—Å–∏–ª–∏—É–º –∂–∞–±' : -1001777552705,
            '–ñ–∞–±—å–∏ –º–æ–Ω—Å—Ç—Ä–∏–∫–∏' : -1001427000422,
            '–ñ–∞–±—ã –í–µ—Ä–æ–Ω—ã' : -1001256439407,
            '–ñ–∞–±—å–∏ —Å–ø–µ—Ü–∏–∏' : -1001499700136,
            '–ë–æ–ª–æ—Ç–æ–∑–∞–≤—Ä' : -1001624280659,
            '–ñ–∞–±–æ–±–æ—Ç—Å—Ç–≤–æ' : -543554726,
        }
        self.categories = json.loads('[' + [_ for _ in ans if '/api' in _ and '/img/' in _][0].split('<')[1].split('>')[0].replace("'", '"') + ']')
        self.clans = clans
        self.client = client
        self.endpoints = {
            'img': 'https://nekos.life/api/v2/img/',
            'owoify': 'https://nekos.life/api/v2/owoify?text=',
            'why': 'https://nekos.life/api/v2/why',
            'cat': 'https://nekos.life/api/v2/cat',
            'fact': 'https://nekos.life/api/v2/fact'
        }
        self.db = db
        self.me = await client.get_me()
        self.status = db.get('Status', 'status', {})

    @loader.sudo
    async def delmecmd(self, message):
        chat = message.chat
        if chat:
            args = utils.get_args_raw(message)
            mag = await utils.answer(message, "<b>–ò—â—É —Å–æ–æ–±—â–µ–Ω–∏—è...</b>")
            all = (await self.client.get_messages(chat, from_user='me')).total
            await utils.answer(msg, f'<b>{all} —Å–æ–æ–±—â–µ–Ω–∏–π –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ!</b>')
            messages = [msg async for msg in self.client.iter_messages(chat, from_user='me')]
            _ = ""
            async for msg in self.client.iter_messages(chat, from_user='me'):
                if _:
                    await msg.delete()
                else:
                    _ = "_"
            await message.delete()

    async def idcmd(self, message):
        reply = await message.get_reply_message()
        user = await message.client.get_entity(reply.sender_id)
        adjectives_start = ["—Ö–æ—Ä–æ—à–∏–π(-–∞—è)", "–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π(-–∞—è)", "–ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π(-–∞—è)", "–¥–ª—è –º–µ–Ω—è –Ω—è—à–Ω—ã–π(-–∞—è)",
                            "–ø—ã—à–Ω—ã–π(-–∞—è)", "–∞–Ω–≥–µ–ª—å—Å–∫–∏–π(-–∞—è)", "–∞–ø–ø–µ—Ç–∏—Ç–Ω—ã–π(-–∞—è)", "–≥–∞—Ä–Ω—ã–π(-–∞—è)"]
        emojies = ["üê∂", "üê±", "üêπ", "üê£", "ü•™", "üçì", "‚ô•Ô∏è", "ü§ç", "ü™Ñ", "‚ú®", "ü¶πüèª", "üåä"]
        nouns = ["—á–µ–ª–æ–≤–µ–∫", "—É—á–∞—Å—Ç–Ω–∏–∫(-—Ü–∞) –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞"]
        starts = ["–ù–µ —Ö–æ—á—É –¥–µ–ª–∞—Ç—å –ø–æ—Å–ø–µ—à–Ω—ã—Ö –≤—ã–≤–æ–¥–æ–≤, –Ω–æ", "–Ø, –∫–æ–Ω–µ—á–Ω–æ, –Ω–µ –º–æ–≥—É —É—Ç–≤–µ—Ä–∂–¥–∞—Ç—å, –∏ —ç—Ç–æ –º–æ–µ —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ –º–Ω–µ–Ω–∏–µ, –Ω–æ", "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–≤ —Å–∏—Ç—É–∞—Ü–∏—é, —è –º–æ–≥—É –≤—ã—Å–∫–∞–∑–∞—Ç—å —Å–≤–æ–µ —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ –º–Ω–µ–Ω–∏–µ. –û–Ω–æ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ",
                  "–ù–µ –ø—ã—Ç–∞—è—Å—å –Ω–∏–∫–æ–≥–æ –æ—Å–∫–æ—Ä–±–∏—Ç—å, –∞ –ª–∏—à—å –≤—ã—Å–∫–∞–∑—ã–≤–∞—è —Å–≤–æ—é —Å–∫—Ä–æ–º–Ω—É—é —Ç–æ—á–∫—É –∑—Ä–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–æ—á–∫—É –∑—Ä–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π, –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ"]
        ends = ["!!!!", "!", "."]
        start = random.choice(starts)
        adjective_start = random.choice(adjectives_start)
        adjective_mid = random.choice(adjectives_start)
        noun = random.choice(nouns)
        end = random.choice(ends)
        emojie = random.choice(emojies)
        insult = emojie + "  " + start + " —Ç—ã ‚Äî " + adjective_start + " –∏ " + \
            adjective_mid + (" " if adjective_mid else "") + noun + end
        logger.debug(insult)
        await message.edit(f'{insult}\n\n'
                           f'–∏–º—è: <b>{user.first_name}</b>\n'
                           f'–∞–π–¥–∏: <b>{user.id}</b>\n'
                           f'—é–∑–µ—Ä: @{user.username}\n'
                           f'–∞–π–¥–∏ —á–∞—Ç–∞: <code>{reply.chat_id}</code>')

    @loader.unrestricted
    async def factcmd(self, message):
        """Did you know?"""
        await utils.answer(message, f"<b>üßê Did you know, that </b><code>{(await utils.run_sync(requests.get, self.endpoints['fact'])).json()['fact']}</code>")

    async def kblcmd(self, message):
        """–í—ã—Å—á–∏—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å"""
        name = self.db.get("kbl", "name", None)
        if not name: return await message.edit(self.strings["name_not_found"].replace("%name%", escape(message.sender.first_name)))
        args = utils.get_args_raw(message)
        if not args: return await message.edit(self.strings["quest_not_found"])
        words = re.findall(r"\w+", f"{name} {args}")
        words_len = [words.__len__()] + [x.__len__() for x in words]
        i = words_len.__len__()
        while i > 1:
            i -= 1
            for x in range(i): words_len[x] = words_len[x] + words_len[x+1] - 9 if words_len[x] + words_len[x+1] > 9 else words_len[x] + words_len[x+1]
        return await message.edit(self.strings["mention"].replace('%id%', str(self.me.id)).replace('%name%', name)+':\n'
                                  +args+f'?\n\n{" |"*words_len[0]}'+self.strings["quest_answer"].replace("%answer%", choice(self.answers[words_len[0]])))

    async def kblnamecmd(self, message):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∏–∏–∏-–º—è –ª—é-–±–∏-–º–æ–µ —Ç–≤–æ—ë"""
        args = utils.get_args(message)
        await self.db.set("kbl", "name", ' '.join(args) if args else None)
        await message.edit(self.strings["name_set"])

    @loader.unrestricted
    async def meowcmd(self, message):
        """Sends cat ascii art"""
        await utils.answer(message, f"<b>{(await utils.run_sync(requests.get, self.endpoints['cat'])).json()['cat']}</b>")

    @loader.pm
    async def nekocmd(self, message):
        """Send anime pic"""
        args = utils.get_args_raw(message)
        args = 'neko' if args not in self.categories else args
        pic = (await utils.run_sync(requests.get, f"{self.endpoints['img']}{args}")).json()["url"]
        await self.client.send_file(message.peer_id, pic, reply_to=message.reply_to_msg_id)
        await message.delete()

    @loader.pm
    async def nekoctcmd(self, message):
        """Show available categories"""
        cats = '\n'.join([' | </code><code>'.join(_) for _ in chunks(self.categories, 5)])
        await utils.answer(message, f'<b>Available categories:</b>\n<code>{cats}</code>')

    @loader.owner
    async def nkcmd(self, m):
        "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ/–≥–∏—Ñ\n–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è neko\n–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é(.nkct)"
        args = utils.get_args_raw(m)
        typ = None
        if args:
            if args in types_of:
                typ = args
        else:
            typ = "neko"
        if typ is None:
            return await m.edit('<b>–Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ</b>')
        await m.edit('<b>Mmm...</b>')
        reply = await m.get_reply_message()
        await m.client.send_file(m.to_id, requests.get(f'https://nekos.life/api/v2/img/{typ}').json()['url'], reply_to=reply.id if reply else None)
        await m.delete()
    async def nkctcmd(self, m):
        await m.edit('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n' + '\n'.join(f'<code>{i}</code>' for i in types_of))

    async def carboncmd(self, message):
        args = utils.get_args_raw(message)
        message = await utils.answer(message, self.strings('loading', message))
        try:
            message = message[0]
        except:
            pass
        url = 'https://carbonnowsh.herokuapp.com/?code=' + urllib.parse.quote_plus(args).replace('%0A', '%250A').replace('%23', '%2523').replace('%2F', '%252f')
        logger.info('[Carbon]: Fetching url ' + url)
        await self.client.send_message(utils.get_chat_id(message), file=requests.get(url).content)
        await message.delete()


    @loader.unrestricted
    async def owoifycmd(self, message):
        """OwOify text"""
        args = utils.get_args_raw(message)
        if not args:
            args = await message.get_reply_message()
            if not args:
                await message.delete()
                return

            args = args.text

        if len(args) > 180:
            message = await utils.answer(message, '<b>OwOifying...</b>')
            try:
                message = message[0]
            except: pass

        args = quote_plus(args)
        owo = ""
        for chunk in chunks(args, 180):
            owo += (await utils.run_sync(requests.get, f"{self.endpoints['owoify']}{chunk}")).json()['owo']
            await asyncio.sleep(0.1)
        await utils.answer(message, owo)

    async def watcher(self, message):
        bak = {1222132115, 1646740346, 1261343954, 1785723159, 1486632011, 1682801197, 1863720231, 1775420029, 1286303075, 1746686703, 1459363960, 1423368454, 547639600, 388412512}
        chat = message.chat_id
        chatid= str(message.chat_id)
        chatik = -435123440
        duel = self.db.get('–î—É—ç–ª—å–∫–∞', 'duel', {})
        jb = "jaba"
        lvl = False
        name = self.me.first_name
        ninja = {-1001733976889, -1001745450607, -1001658628295}
        randelta = random.randint(3, 21+1)
        u = 0
        x = 0
        EK = {
            -1001441941681,
            -1001436786642,
            -1001380664241,
            -1001289617428,
            -1001485617300,
            -1001465870466,
            -1001447960786}
        KW = {-419726290, -1001543064221, -577735616, -1001493923839}

        if chat in ninja:
            if message.sender_id not in {1124824021}:
                if "–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É" in message.message.casefold():
                    aaa = ""
                    id = 904983
                    async with message.client.conversation(chat) as conv:
                        response = await conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                        if "–Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–ª–∞–Ω–∞" in response.text:
                            aaa =  f"<i>{message.sender.first_name} –≤ –ø–æ–∏—Å–∫–µ</i>"
                            rret = await self.client.get_messages(chatik, ids=id)
                            await rret.edit(aaa)
                    await message.client.send_message(chatik, aaa)

        if "@metaoo" in message.message:
            id = 904434
            rret = await self.client.get_messages(chatik, ids=id)
            await self.client.send_message(chat, rret, reply_to=message)

        if "—Å—Ç–∞—Ç–∞ –∫–≤" in message.message:
            id = 904983
            rret = await self.client.get_messages(chatik, ids=id)
            await self.client.send_message(chat, rret, reply_to=message)

        if "–∫–≤" in message.message:
            if "–∏–Ω—Ñ–æ" in message.message:
                id = 904983
                rret = await self.client.get_messages(chatik, ids=id)
                await self.client.send_message(chat, rret, reply_to=message)

        if message.sender_id in {1124824021}:
            if "–°–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ—Ç —Ö–æ–¥: " + name in message.message:
                await message.click(0)
            if "–ì–æ—Å–ø–æ–¥–∏–Ω " + name in message.message:
                await sleep (3)
                await message.respond('—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                await sleep (3)
                await message.respond('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –∑–∞ –∫–∞—Ä—Ç–æ–π')
            if "–ø–æ–∑–≤–∞—Ç—å –Ω–∞ —Ç—É—Å—É" in message.message:
                await sleep(3)
                await message.respond('—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                await sleep(3)
                await message.respond('–∂–∞–±—É –Ω–∞ —Ç—É—Å—É')

            if "–¢–µ–±–µ –∂–∞–±–∞," in message.message:
                if chat in KW:
                    async with self.client.conversation(message.chat_id) as conv:
                        await sleep (3)
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                        await message.respond('–º–æ–π –∫–ª–∞–Ω')
                        response = await response
                        if "–ö–ª–∞–Ω" in response.text:
                            if "–ü–æ–π—Ç–∏ –∑–∞ –∫–∞—Ä—Ç–æ–π" not in response.text:
                                await sleep (3)
                                await message.respond('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –∑–∞ –∫–∞—Ä—Ç–æ–π')
                                await sleep (13)
                                await message.respond('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –∑–∞ –∫–∞—Ä—Ç–æ–π')
                                delta = timedelta(hours=8, seconds=randelta)
                                await message.client.send_message(chat, '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –∑–∞ –∫–∞—Ä—Ç–æ–π', schedule=delta)
                                await message.client.send_message(chat, '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –∑–∞ –∫–∞—Ä—Ç–æ–π', schedule=delta + timedelta(hours=8, seconds=13))

            if chat in ninja:
                if message.message.startswith('–ê–ª–ª–æ'):
                    wd = "waina"
                    capt = re.search('–î–ª—è –∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞', message.text)
                    if capt:
                        mk = capt.group(1)
                        ek = capt.group(2)
                        war = f"{mk} –ø—Ä–æ—Ç–∏–≤ –∫–ª–∞–Ω–∞ {ek}"
                        self.status[wd] = war
                        self.db.set('Status', 'status', self.status)
                        if "–í–∞–¥–∏–º –∏ –µ–≥–æ –∂–∞–±–µ—Ö–∏" in war:
                            await message.client.send_message(-1001441941681, f'‚ö°Ô∏è –ö–ª–∞–Ω {war}')
                        else:
                            await message.client.send_message(1767017980, f'‚ö°Ô∏è –ö–ª–∞–Ω {war}')
                        if "–ö—Ä–æ–≤–∞–≤–∞—è —Å–≤–∞–¥—å–±–∞" in message.message:
                            await message.client.send_message(-1001441941681, f'·Ö†  ‚ö†Ô∏è –ó–∞–º–µ—á–µ–Ω–∞ –ö—Ä–æ–≤–∞–≤–∞—è —Å–≤–∞–¥—å–±–∞ ‚ö†Ô∏è\n\n<i>{war}</i>')
                        if "AVADA KEDAVRA" in message.message:
                            await message.client.send_message(-1001441941681, f'·Ö†  ‚ö†Ô∏è –ó–∞–º–µ—á–µ–Ω–∞ AVADA KEDAVRA ‚ö†Ô∏è\n\n<i>{war}</i>')
                        if "–ê–ª–∫–∞—à–∏" in message.message:
                            await message.client.send_message(-1001441941681, f'·Ö†  ‚ö†Ô∏è –ó–∞–º–µ—á–µ–Ω—ã –ê–ª–∫–∞—à–∏ ‚ö†Ô∏è\n\n<i>{war}</i>')
                        if "–¢—Ä–µ–∑–≤–µ–Ω–Ω–∏–∫–∏" in message.message:
                            await message.client.send_message(-1001441941681, f'·Ö†  ‚ö†Ô∏è –ó–∞–º–µ—á–µ–Ω—ã –¢—Ä–µ–∑–≤–µ–Ω–Ω–∏–∫–∏ ‚ö†Ô∏è\n\n<i>{war}</i>')

        if message.sender_id in {830605725}:
            if "[8üêù]" in message.message:
                await message.click(0)
            if "[4üêù]" in message.message:
                await message.click(0)
            if "[2‚ò¢Ô∏èüêù, 2üî¥üêù," in message.message:
                await message.click(0)
            if "–ë–∑–∑–∑–∑! –° –ø–∞—Å–µ–∫–∏" in message.message:
                await message.click(0)

        if "–ª–≤–ª —á–µ–∫" in message.message:
            async with self.client.conversation(message.chat_id) as conv:
                await message.respond(f'–û—Ç–ø—Ä–∞–≤—å —É—Ä–æ–Ω –∏ –∑–¥–æ—Ä–æ–≤—å–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –≤ –ø–µ—Ä–≤–æ–π –∞—Ç–∞–∫–µ, –≤ –≤–∏–¥–µ:\n\n.. üòè ..\n\n(–≤–º–µ—Å—Ç–æ —Ç–æ—á–µ–∫ –≤–≤–æ–¥–∏—Ç—å —Ü–∏—Ñ—Ä—ã)')
                response = await conv.wait_event(events.NewMessage(incoming=True, outgoing=True, from_users=message.sender_id, chats=message.chat_id))
                if "üòè" in response.text:
                    lvl = re.search('(\d+)\süòè\s(\d+)', response.text)
                    if lvl:
                        x = int(lvl.group(1))
                        u = int(lvl.group(2))
                        y = u + x
                        res = ( y - 160 )*2
                        if res > -1:
                            if "üòè" in response.text:
                                args = f'<b>~ {res} –ª–≤–ª</b>'
                        else:
                            args = f'<b>–ª–≤–ª –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º!!!\n–ø—Ä–æ–±—É–π –∑–∞–Ω–æ–≤–æ, –Ω–∞–ø–∏—à–∏:\n\n–ª–≤–ª —á–µ–∫<b>'
                        await self.client.send_message(chat, args, reply_to=response)
                else:
                    await message.reply(f'–ø—Ä–æ–±—É–π –∑–∞–Ω–æ–≤–æ, –Ω–∞–ø–∏—à–∏:\n\n<code>–ª–≤–ª —á–µ–∫</code>')

        if message.sender_id in {self.me.id}:
            if "–æ–±—â–∏–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å" in message.message:
                cid = "clan"
                if cid not in self.status:
                    await utils.answer(message, self.strings('update', message))
                else:
                    await message.edit(self.status[cid])
                prit = "<b>–ú–æ–π –æ–±—â–∏–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:</b>"
                for clan_name, clan_id in self.clans.items():
                    async with message.client.conversation(clan_id) as conv:
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=clan_id))
                        await sleep(1)
                        await conv.send_message('–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')
                        response = await response
                        if "–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:" in response.text:
                            caption = re.search('üç¨–õ–µ–¥–µ–Ω—Ü—ã: (\d+)', response.text).group(1)
                            caption1 = re.search('üíä–ê–ø—Ç–µ—á–∫–∏: (\d+)', response.text).group(1)
                            caption2 = re.search('üó∫–ö–∞—Ä—Ç–∞ –±–æ–ª–æ—Ç–∞: (\d+)', response.text).group(1)
                            caption3 = re.search('üê∏–ñ–∞–±—É–ª–∏ –¥–ª—è –±–∞–Ω–¥—ã: (.+)', response.text).group(1)
                            prit += f"\n\n{clan_name}\nüç¨–õ–µ–¥–µ–Ω—Ü—ã: {caption}\nüíä–ê–ø—Ç–µ—á–∫–∏: {caption1}\nüó∫–ö–∞—Ä—Ç–∞ –±–æ–ª–æ—Ç–∞: {caption2}\nüê∏–ñ–∞–±—É–ª–∏ –¥–ª—è –±–∞–Ω–¥—ã: {caption3}"
                args = prit
                self.status[cid] = args
                self.db.set('Status', 'status', self.status)
                await message.edit(f'{args}')

        if message.sender_id in bak:
            if chat in EK:
                if "—Ç–æ–ø –∂–∞–±" in message.message:
                    async with self.client.conversation(message.chat_id) as conv:
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                        await message.respond('–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ')
                        response = await response
                        if "–ù—É-–∫–∞ –ø–æ–¥–æ–∂–¥–∏," in response.text:
                            await sleep(3)
                            response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                            await message.respond('—Ä–µ–π–¥ –∏–Ω—Ñ–æ')
                            response = await response
                            if "–†–µ–±—è—Ç–∞ –≤ –∑–æ–ª–æ—Ç–æ–º" in response.text:
                                count = len(re.findall('‚Ä¢ ', response.text.split(sep='–†–µ–±—è—Ç–∞ –≤ –∑–æ–ª–æ—Ç–æ–º –ø–æ–¥–∑–µ–º–µ–ª—å–µ:')[1]))
                                if count > 2:
                                    await sleep(3)
                                    response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                                    await message.respond(chat, '–º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ')
                                    response = await response
                                    if "–ë–ª–∏–∂–Ω–∏–π –±–æ–π: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                        await sleep(3)
                                        await message.respond('—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫–ª—é–≤ —Ü–∞–ø–ª–∏')
                                    if "–î–∞–ª—å–Ω–∏–π –±–æ–π: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                        await sleep(3)
                                        await message.respond('—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –±—É–∫–∞—à–∫–æ–º–µ—Ç')
                                    if "–ù–∞–≥–æ–ª–æ–≤–Ω–∏–∫: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                        await sleep(3)
                                        await message.respond('—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥–æ–ª–æ–≤–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏')
                                    if "–ù–∞–≥—Ä—É–¥–Ω–∏–∫: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                        await sleep(3)
                                        await message.respond('—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏')
                                    if "–ù–∞–ª–∞–ø–Ω–∏–∫–∏: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                        await sleep(3)
                                        await message.respond('—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–ª–∞–ø–Ω–∏–∫–∏ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏')
                                    if "–ë–∞–Ω–¥–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                        await sleep(3)
                                        await message.respond('—Å–æ–±—Ä–∞—Ç—å –±–∞–Ω–¥—É')
                                    await sleep(3)
                                    await message.respond('—Ä–µ–π–¥ —Å—Ç–∞—Ä—Ç')
                        elif "–î–ª—è –≤—Ö–æ–¥–∞ –≤" in response.text:
                            response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                            await message.respond('–ú–æ—è –∂–∞–±–∞')
                            response = await response
                            if "–ò–º—è –∂–∞–±—ã:" in response.text:
                                bug = int(re.search('–ë—É–∫–∞—à–∫–∏: (\d+)', response.text, re.IGNORECASE).group(1))
                                nas = int(re.search('–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.?:.+\((\d+)\)', response.text, re.IGNORECASE).group(1))
                                if nas < 500:
                                    led = int((500 - nas)/25)
                                    if led > 0:
                                        await sleep(3)
                                        await message.respond(f'–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–µ–¥–µ–Ω—Ü—ã {led}')
                        else:
                            await sleep(3)
                            response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                            await message.respond('–∂–∞–±–∞ –∏–Ω—Ñ–æ')
                            response = await response
                            if "(–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                                time_f = re.search('–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º', response.text, re.IGNORECASE)
                                if time_f:
                                    hrs = int(time_f.group(1))
                                    min = int(time_f.group(2))
                                    delta = timedelta(hours=hrs, minutes=min, seconds=randelta)
                                await message.client.send_message(chat, '–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É', schedule=delta)
                            else:
                                await sleep(3)
                                await message.respond('–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É')
                                delta = timedelta(hours=4, seconds=randelta)
                                await message.client.send_message(chat, '–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É', schedule=delta)
                            for number in range(4):
                                delta = delta + timedelta(hours=4)
                                await message.client.send_message(chat, '–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É', schedule=delta)
                                await sleep(3)
                            if "–í –ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ" in response.text:
                                dng_s = re.search('–ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+)—á. (\d+)–º.', response.text, re.IGNORECASE)
                                if dng_s:
                                    hrs = int(dng_s.group(1))
                                    min = int(dng_s.group(2))
                                    delta = timedelta(hours=hrs, minutes=min, seconds=randelta)
                                await message.client.send_message(chat, '—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É', schedule=delta)
                                await message.client.send_message(chat, '–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ', schedule=delta + timedelta(seconds=13))
                                await sleep(3)
                                response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                                await message.respond('–ú–æ—è —Å–µ–º—å—è')
                                response = await response
                                if "–í–∞—à –∂–∞–±—ë–Ω—ã—à:" in response.text:
                                    if "–ú–æ–∂–Ω–æ –ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                                        sem = re.search('–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+) —á. (\d+) –º–∏–Ω—É—Ç', response.text, re.IGNORECASE)
                                        if sem:
                                            hrs = int(sem.group(1))
                                            min = int(sem.group(2))
                                        delta = timedelta(hours=hrs, minutes=min, seconds=randelta)
                                        await message.client.send_message(chat, '–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞', schedule=delta)
                                    else:
                                        await sleep(3)
                                        await message.respond('–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞')
                                    if "–ú–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å —á–µ—Ä–µ–∑" in response.text:
                                        sad = re.search('–∑–∞–±—Ä–∞—Ç—å —á–µ—Ä–µ–∑ (\d+) —á. (\d+) –º–∏–Ω—É—Ç', response.text, re.IGNORECASE)
                                        if sad:
                                            hrs = int(sad.group(1))
                                            min = int(sad.group(2))
                                            delta = timedelta(hours=hrs, minutes=min, seconds=randelta)
                                            await message.client.send_message(chat, '–∑–∞–±—Ä–∞—Ç—å –∂–∞–±–µ–Ω–∫–∞', schedule=delta)
                                    else:
                                        await sleep(3)
                                        await message.respond('–∑–∞–±—Ä–∞—Ç—å –∂–∞–±–µ–Ω–∫–∞')
                                    if "–ü–æ–π—Ç–∏ –Ω–∞ –º–∞—Ö–∞—á" in response.text:
                                        sad = re.search('–º–∞—Ö–∞—á —á–µ—Ä–µ–∑ (\d+) —á. (\d+) –º–∏–Ω—É—Ç', response.text, re.IGNORECASE)
                                        if sad:
                                            hrs = int(sad.group(1))
                                            min = int(sad.group(2))
                                            delta = timedelta(hours=hrs, minutes=min, seconds=randelta)
                                            await message.client.send_message(chat, '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –Ω–∞ –º–∞—Ö–∞—á', schedule=delta)
                                    else:
                                        await sleep(3)
                                        await message.respond('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –Ω–∞ –º–∞—Ö–∞—á')
                                    await sleep (3)
                                    response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                                    await message.client.send_message(chat, '–≤–æ–π–Ω–∞ –∏–Ω—Ñ–æ')
                                    response = await response
                                    if "‚öîÔ∏è–°–æ—Å—Ç–æ—è–Ω–∏–µ‚öîÔ∏è: –ù–µ" in response.text:
                                        if message.chat_id in KW:
                                            await sleep(3)
                                            await message.respond('–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É')
                                    else:
                                        if name + " | –ù–µ –∞—Ç–∞–∫–æ–≤–∞–ª" in response.text:
                                            await sleep(3)
                                            await message.respond('—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                                            await sleep(3)
                                            await message.respond('–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω')
                            else:
                                dng_s = re.search('–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç', response.text, re.IGNORECASE)
                                if dng_s:
                                    hrs = int(dng_s.group(1))
                                    min = int(dng_s.group(2))
                                    delta = timedelta(hours=hrs, minutes=min, seconds=randelta)
                                    await message.client.send_message(chat, '–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É', schedule=delta)
                                    await message.client.send_message(chat, '—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±–∫—É', schedule=delta + timedelta(minutes=25, seconds=randelta))
                                    await message.client.send_message(chat, '–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ', schedule=delta + timedelta(minutes=45, seconds=randelta+13))
            else:
                if "–∂–∞–±–∞ –¥–Ω—è" in message.message:
                    async with self.client.conversation(message.chat_id) as conv:
                        await sleep(3)
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                        await message.respond('–∂–∞–±–∞ –∏–Ω—Ñ–æ')
                        response = await response
                        if "—Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ" in response.text:
                            time_j = re.search('–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º', response.text, re.IGNORECASE)
                            if time_j:
                                hrs = int(time_j.group(1))
                                min = int(time_j.group(2))
                                delta = timedelta(hours=hrs, minutes=min, seconds=randelta)
                            await message.client.send_message(chat, '—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É', schedule=delta)
                            await message.client.send_message(chat, '—Ä–∞–±–æ—Ç–∞ –≥—Ä–∞–±–∏—Ç–µ–ª—å', schedule=delta + timedelta(seconds=13))
                            for number in range(2):
                                delta = delta + timedelta(hours=8)
                                await message.client.send_message(chat, '—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É', schedule=delta)
                                await message.client.send_message(chat, '—Ä–∞–±–æ—Ç–∞ –≥—Ä–∞–±–∏—Ç–µ–ª—å', schedule=delta + timedelta(seconds=randelta))
                                await message.client.send_message(chat, '–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É', schedule=delta + timedelta(hours=2, seconds=randelta+3))
                                await sleep(1)
                        else:
                            if "–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑" in response.text:
                                time_r = re.search('—á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç', response.text, re.IGNORECASE)
                                if time_r:
                                    hrs = int(time_r.group(1))
                                    min = int(time_r.group(2))
                                    delta = timedelta(hours=hrs, minutes=min, seconds=randelta)
                                await message.client.send_message(chat, '–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É', schedule=delta)
                            elif "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in response.text:
                                await sleep(3)
                                await message.respond('—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                                await sleep(3)
                                await message.respond('—Ä–∞–±–æ—Ç–∞ –≥—Ä–∞–±–∏—Ç–µ–ª—å')
                                delta = timedelta(hours=2, seconds=randelta)
                                await message.client.send_message(chat, '–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É', schedule=delta)
                            else:
                                await sleep(3)
                                await message.respond('–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É')
                            for number in range(2):
                                delta = delta + timedelta(hours=6, seconds=3)
                                await message.client.send_message(chat, '—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É', schedule=delta)
                                await message.client.send_message(chat, '—Ä–∞–±–æ—Ç–∞ –≥—Ä–∞–±–∏—Ç–µ–ª—å', schedule=delta + timedelta(seconds=randelta))
                                await message.client.send_message(chat, '–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É', schedule=delta + timedelta(hours=2, seconds=randelta+3))
                                await sleep(3)
                        if "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                            time_n = re.search('–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º', response.text, re.IGNORECASE)
                            if time_n:
                                hrs = int(time_n.group(1))
                                min = int(time_n.group(2))
                                delta = timedelta(hours=hrs, minutes=min, seconds=randelta)
                            await message.client.send_message(chat, '–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É', schedule=delta)
                        else:
                            delta = timedelta(seconds=randelta)
                            await message.client.send_message(chat, '–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É', schedule=delta)
                        for number in range(1):
                            delta = delta + timedelta(hours=12, seconds=3)
                            await message.client.send_message(chat, '–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É', schedule=delta)
                            await sleep(3)

            if name + " –¥—É—ç–ª—å–∫–∞" in message.message:
                if chatid in duel:
                    duel.pop(chatid)
                    self.db.set('–î—É—ç–ª—å–∫–∞', 'duel', duel)
                    return await message.respond('<b>–ø—å—é —Ä–æ–º–∞—à–∫–æ–≤—ã–π —á–∞–π</b>!')
                duel.setdefault(chatid, {})
                self.db.set('–î—É—ç–ª—å–∫–∞', 'duel', duel)
                async with message.client.conversation(message.chat_id) as conv:
                    response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                    await sleep(1)
                    await conv.send_message('–º–æ—è –∂–∞–±–∞')
                    response = await response
                    if "–ò–º—è –∂–∞–±—ã:" in response.text:
                        jaba = re.search('–ò–º—è –∂–∞–±—ã: (.+)', response.text).group(1)
                self.status[jb] = jaba
                self.db.set('Status', 'status', self.status)
                await message.respond(f'–ò–º—è –∂–∞–±—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {jaba}\n –≥–æ –¥—É—ç–ª–∏')
            if "–ú–æ–Ω–∞—Ä—Ö –Ω–∞–ø–∞–¥–∏" in message.message:
                await message.respond("<b>—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É</b>")
                await sleep (3)
                await message.respond('<b>–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω</b>')
            if "–ú–æ–Ω–∞—Ä—Ö –ø–æ–¥–∑–µ–º–µ–ª—å–µ" in message.message:
                await message.respond('<b>—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É</b>')
                await sleep (3)
                await message.respond('<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>')
            if "–ú–æ–Ω–∞—Ä—Ö —Å —Ä–∞–±–æ—Ç—ã" in message.message:
                await message.respond('<b>–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É</b>')
            if "–ú–æ–Ω–∞—Ä—Ö –∫–∞—Ä—Ç–∞" in message.message:
                await message.respond('<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –∑–∞ –∫–∞—Ä—Ç–æ–π</b>')
            if "–ú–æ–Ω–∞—Ä—Ö –Ω–∞ —Ç—É—Å—É" in message.message:
                await message.respond('<b>—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É</b>')
                await sleep (3)
                await message.respond('<b>–∂–∞–±—É –Ω–∞ —Ç—É—Å—É</b>')
            if "–±—É–∫–∞—à–∫–∏ –º–Ω–µüòä" in message.message:
                await sleep (randelta)
                async with message.client.conversation(chat) as conv:
                    response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                    await message.respond('–º–æ–π –±–∞–ª–∞–Ω—Å')
                    response = await response
                    if '–ë–∞–ª–∞–Ω—Å –±—É–∫–∞—à–µ–∫ –≤–∞—à–µ–π' in response.text:
                        bug = int(re.search('–∂–∞–±—ã: (\d+)', response.text, re.IGNORECASE).group(1))
                        if bug <100:
                            await message.reply('–æ—Å—Ç–∞–ª–æ—Å—å –¥–ª—è –ø–æ—Ö–æ–¥–∞')
                        else:
                            while bug > 50049:
                                await message.reply('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ 50000')
                                bug -= 50000
                                await sleep(1)
                            snt = bug-50
                            await message.reply(f'–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ {snt}')
            if "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –º–Ω–µüòä" in message.message:
                await sleep (randelta)
                async with message.client.conversation(chat) as conv:
                    response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                    await message.respond('–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')
                    response = await response
                    if '–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:' in response.text:
                        cnd = int(re.search('–õ–µ–¥–µ–Ω—Ü—ã: (\d+)', response.text, re.IGNORECASE).group(1))
                        apt = int(re.search('–ê–ø—Ç–µ—á–∫–∏: (\d+)', response.text, re.IGNORECASE).group(1))
                    if cnd > 0:
                        while cnd > 49:
                            await message.reply('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã 50')
                            cnd -= 50
                            await sleep(1)
                        await message.reply(f'–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã {cnd}')
                        await sleep(1)
                    if apt > 0:
                        if apt > 9:
                            await message.reply('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ 10')
                        else:
                            await message.reply(f'–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ {apt}')

            if "–æ–≥–æ—à–µ—á–∫–∏" in message.message:
                reply = await message.get_reply_message()
                if reply:
                    count = len(re.findall('^‚Ä¢', reply.text, re.MULTILINE))
                    neys = re.findall('–£—Ä–æ–≤–µ–Ω—å: (\d+)', reply.text)
                    mnu = int(neys[0])
                    for ney in neys:
                        ney = int(ney)
                        if ney < mnu:
                            mnu = ney
                    msu = 0
                    for ney in neys:
                        ney = int(ney)
                        if ney > msu:
                            msu = ney
                    args = f'–∂–∞–±: {count}\n\n–º–∏–Ω —É—Ä–æ–≤–µ–Ω—å: {mnu}\n–ú–∞–∫—Å —É—Ä–æ–≤–µ–Ω—å: {msu}'
                    url = 'https://carbonnowsh.herokuapp.com/?code=' + urllib.parse.quote_plus(args).replace('%0A', '%250A').replace('%23', '%2523').replace('%2F', '%252f')
                    logger.info('[Carbon]: Fetching url ' + url)
                    await self.client.send_message(chat, file=requests.get(url).content, reply_to=reply)

            if "–≥–æ–Ω—â–∏–∫" in message.message:
                reply = await message.get_reply_message()
                if reply:
                    count = int(len(re.findall('^üèÜ', reply.text, re.MULTILINE)))
                    if count > 1:
                        money = int(re.search('—Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: (\d+) –±—É–∫–∞—à–µ–∫', reply.text, re.IGNORECASE). group (1))
                        gm = round((money * count) * 0.85)
                        args = f'< –≤ –∑–∞–±–µ–≥–µ —É—á–∞—Å—Ç–≤—É—é—Ç {count} —á—É–≤–∞—á–∫–∞\n–ø–æ–±–µ–¥–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç {gm} –±—É–∫–∞—à–µ–∫ >\n\n       \   ^__^\n        \  (oo)\_______\n           (__)\       )\/\n               ||----w||\n               ||     ||'
                    else:
                        args = 'üåïüåïüåïüåïüåïüåïüåïüåïüåï\nüåïüåóüåëüåëüåëüåëüåëüåìüåï\nüåïüåóüåëüåëüåëüåëüåëüåïüåï\nüåïüåóüåëüåìüåïüåïüåïüåïüåï\nüåïüåóüåëüåìüåïüåïüåïüåïüåï\nüåïüåóüåëüåëüåëüåëüåìüåïüåï\nüåïüåóüåëüåëüåëüåëüåïüåïüåï\nüåïüåóüåëüåìüåïüåïüåïüåïüåï\nüåïüåóüåëüåìüåïüåïüåïüåïüåï\nüåïüåóüåëüåìüåïüåïüåïüåïüåï\nüåïüåïüåïüåïüåïüåïüåïüåïüåï'
                    url = 'https://carbonnowsh.herokuapp.com/?code=' + urllib.parse.quote_plus(args).replace('%0A', '%250A').replace('%23', '%2523').replace('%2F', '%252f')
                    logger.info('[Carbon]: Fetching url ' + url)
                    await self.client.send_message(chat, file=requests.get(url).content, reply_to=reply)
                    firstname = " ç÷Ö’≤…ë…æœ≤’∞ üü¢(online)"
                    await message.client(UpdateProfileRequest(first_name=firstname))

        if message.chat_id in {707693258}:
            if "–§–∞—Ä–º–∞" in message.message:
                return await self.client.send_message(chat, '–§–∞—Ä–º–∞', schedule=timedelta(minutes=random.randint(1, 20)))
            if "–ù–ï–ó–ê–ß–Å–¢!" in message.message:
                args = [int(x) for x in message.text.split() if x.isnumeric()]
                randelta = random.randint(20, 60)
                if len(args) == 4: delta = timedelta(hours=args[1], minutes=args[2], seconds=args[3]+randelta)
                elif len(args) == 3: delta = timedelta(minutes=args[1], seconds=args[2]+randelta)
                elif len(args) == 2: delta = timedelta(seconds=args[1]+randelta)
                else: return
                sch = (await self.client(functions.messages.GetScheduledHistoryRequest(chat, 1488))).messages
                await self.client(functions.messages.DeleteScheduledMessagesRequest(chat, id=[x.id for x in sch]))
                await self.client.send_message(chat, '–§–∞—Ä–º–∞', schedule=delta)

        if chatid not in duel: return

        if message.sender_id not in {self.me.id, 1124824021}:
            if "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É" in message.message:
                await sleep (1)
                await message.reply('–¥—É—ç–ª—å')

        if message.sender_id in {1124824021}:
            if "–í—ã –±—Ä–æ—Å–∏–ª–∏ –≤—ã–∑–æ–≤ –Ω–∞ –¥—É—ç–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é " + name in message.message:
                await sleep (1)
                await message.respond('–¥—É—ç–ª—å –ø—Ä–∏–Ω—è—Ç—å')
                await sleep (1)
                await message.respond('–¥—É—ç–ª—å —Å—Ç–∞—Ä—Ç')

            if self.status[jb] + ", –£ –≤–∞—Å –Ω–∏—á—å—è" in message.message:
                await sleep (1)
                await message.respond('–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É')

            if "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å" in message.message:
                if self.status[jb] + "!!!" in message.message:
                    if "–æ—Ç—ã–≥—Ä–∞–ª" in message.message:
                        await sleep (1)
                        await message.respond(f'{name} –¥—É—ç–ª—å–∫–∞')
                    else:
                        return
                else:
                    await sleep (1)
                    await message.respond('–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É')

    @loader.unrestricted
    async def whycmd(self, message):
        """Why?"""
        await utils.answer(message, f"<code>üëæ {(await utils.run_sync(requests.get, self.endpoints['why'])).json()['why']}</code>")
